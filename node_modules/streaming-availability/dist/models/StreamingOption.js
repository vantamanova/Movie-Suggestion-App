"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Streaming Availability API
 * Streaming Availability API allows getting streaming availability information of movies and series; and querying the list of available shows on streaming services such as Netflix, Disney+, Apple TV, Max and Hulu across 60 countries!
 *
 * The version of the OpenAPI document: 4.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamingOptionToJSON = exports.StreamingOptionFromJSONTyped = exports.StreamingOptionFromJSON = exports.instanceOfStreamingOption = exports.StreamingOptionQualityEnum = void 0;
var Addon_1 = require("./Addon");
var Locale_1 = require("./Locale");
var Price_1 = require("./Price");
var ServiceInfo_1 = require("./ServiceInfo");
var StreamingOptionType_1 = require("./StreamingOptionType");
var Subtitle_1 = require("./Subtitle");
/**
 * @export
 */
exports.StreamingOptionQualityEnum = {
    Sd: 'sd',
    Hd: 'hd',
    Qhd: 'qhd',
    Uhd: 'uhd'
};
/**
 * Check if a given object implements the StreamingOption interface.
 */
function instanceOfStreamingOption(value) {
    if (!('service' in value))
        return false;
    if (!('type' in value))
        return false;
    if (!('link' in value))
        return false;
    if (!('audios' in value))
        return false;
    if (!('subtitles' in value))
        return false;
    if (!('expiresSoon' in value))
        return false;
    if (!('availableSince' in value))
        return false;
    return true;
}
exports.instanceOfStreamingOption = instanceOfStreamingOption;
function StreamingOptionFromJSON(json) {
    return StreamingOptionFromJSONTyped(json, false);
}
exports.StreamingOptionFromJSON = StreamingOptionFromJSON;
function StreamingOptionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'service': (0, ServiceInfo_1.ServiceInfoFromJSON)(json['service']),
        'type': (0, StreamingOptionType_1.StreamingOptionTypeFromJSON)(json['type']),
        'addon': json['addon'] == null ? undefined : (0, Addon_1.AddonFromJSON)(json['addon']),
        'link': json['link'],
        'videoLink': json['videoLink'] == null ? undefined : json['videoLink'],
        'quality': json['quality'] == null ? undefined : json['quality'],
        'audios': (json['audios'].map(Locale_1.LocaleFromJSON)),
        'subtitles': (json['subtitles'].map(Subtitle_1.SubtitleFromJSON)),
        'price': json['price'] == null ? undefined : (0, Price_1.PriceFromJSON)(json['price']),
        'expiresSoon': json['expiresSoon'],
        'expiresOn': json['expiresOn'] == null ? undefined : json['expiresOn'],
        'availableSince': json['availableSince'],
    };
}
exports.StreamingOptionFromJSONTyped = StreamingOptionFromJSONTyped;
function StreamingOptionToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'service': (0, ServiceInfo_1.ServiceInfoToJSON)(value['service']),
        'type': (0, StreamingOptionType_1.StreamingOptionTypeToJSON)(value['type']),
        'addon': (0, Addon_1.AddonToJSON)(value['addon']),
        'link': value['link'],
        'videoLink': value['videoLink'],
        'quality': value['quality'],
        'audios': (value['audios'].map(Locale_1.LocaleToJSON)),
        'subtitles': (value['subtitles'].map(Subtitle_1.SubtitleToJSON)),
        'price': (0, Price_1.PriceToJSON)(value['price']),
        'expiresSoon': value['expiresSoon'],
        'expiresOn': value['expiresOn'],
        'availableSince': value['availableSince'],
    };
}
exports.StreamingOptionToJSON = StreamingOptionToJSON;
