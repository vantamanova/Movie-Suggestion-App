"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Streaming Availability API
 * Streaming Availability API allows getting streaming availability information of movies and series; and querying the list of available shows on streaming services such as Netflix, Disney+, Apple TV, Max and Hulu across 60 countries!
 *
 * The version of the OpenAPI document: 4.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChangesResultToJSON = exports.ChangesResultFromJSONTyped = exports.ChangesResultFromJSON = exports.instanceOfChangesResult = void 0;
var Change_1 = require("./Change");
/**
 * Check if a given object implements the ChangesResult interface.
 */
function instanceOfChangesResult(value) {
    if (!('changes' in value))
        return false;
    if (!('shows' in value))
        return false;
    if (!('hasMore' in value))
        return false;
    return true;
}
exports.instanceOfChangesResult = instanceOfChangesResult;
function ChangesResultFromJSON(json) {
    return ChangesResultFromJSONTyped(json, false);
}
exports.ChangesResultFromJSON = ChangesResultFromJSON;
function ChangesResultFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'changes': (json['changes'].map(Change_1.ChangeFromJSON)),
        'shows': json['shows'],
        'hasMore': json['hasMore'],
        'nextCursor': json['nextCursor'] == null ? undefined : json['nextCursor'],
    };
}
exports.ChangesResultFromJSONTyped = ChangesResultFromJSONTyped;
function ChangesResultToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'changes': (value['changes'].map(Change_1.ChangeToJSON)),
        'shows': value['shows'],
        'hasMore': value['hasMore'],
        'nextCursor': value['nextCursor'],
    };
}
exports.ChangesResultToJSON = ChangesResultToJSON;
